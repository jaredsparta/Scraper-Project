# Will ensure the flask app is running on the host
---
- name: ensures the flask app is running on the host
  hosts: scraper

  tasks:
  - name: creates a Downloads folder to ensure that the app creates the csv there
    file:
      path: /home/ubuntu/Downloads
      state: directory


# Will use nginx as a reverse proxy for the app
  - name: install nginx
    become: true
    apt:
      name: nginx
      state: present
      update_cache: yes

  - name: create a config file for nginx
    become: true
    copy:
      dest: /etc/nginx/sites-available/reverse-proxy.conf
      content: |
        server {
          listen 80;

          location / {
            proxy_pass      http://localhost:5000;
          }
        }

  - name: delete the default file in sites-enabled
    become: true
    file:
      path: /etc/nginx/sites-enabled/default
      state: absent

  - name: create symlink from new file to default
    become: true
    file:
      src: /etc/nginx/sites-available/reverse-proxy.conf
      dest: /etc/nginx/sites-enabled/reverse-proxy.conf
      state: link

  - name: restart nginx for new config to take place
    become: true
    service:
      name: nginx
      state: restarted

######################
### App stuff
  - name: copy the flask files onto the host
    become: true
    copy:
      src: /home/vagrant/DevOpsProject-ItJobsWatch-master
      dest: /home/ubuntu/

  - name: copies the requirements.txt for ease of provisioning the environment
    copy:
      src: /home/vagrant/DevOpsProject-ItJobsWatch-master/requirements.txt
      dest: /home/ubuntu/requirements.txt

  - name: installs the necessary python packages to run
    become: true
    apt:
      name: python3-venv
      state: present
      update_cache: yes

  - name: create a venv
    shell:
      cmd: |
        python3 -m venv venv
        PATH=/home/ubuntu//venv/bin:$PATH

  - name: install requirements for app
    pip:
      requirements: /home/ubuntu/requirements.txt
      virtualenv: /home/ubuntu/venv
      virtualenv_python: python3.6

  - name: creates a system service
    become: true
    copy:
      src: /home/vagrant/ansible-files/setup-files/flaskapp.service
      dest: /etc/systemd/system/flaskapp.service
    
  - name: start the service
    become: true
    systemd:
      name: flaskapp.service
      state: started
      enabled: yes

  - name: restart the service
    become: true
    systemd:
      name: flaskapp.service
      state: restarted
      enabled: yes
